import{K as o,_ as m}from"./index-s6c4EPi7.js";const H=o.object({handleUri:o.func().optional(),version:o.number().optional().custom((t,s)=>{if(t===1)console.warn("Version 1 of WalletConnect has been fully deprecated. This version of @web3-onboard/walletconnect only supports version 2");else if(t!==2&&t!==void 0)return s.error("any.invalid",{message:"Invalid version number. This version of @web3-onboard/walletconnect only supports version 2"});return t},"Custom version validation"),projectId:o.string().messages({"any.required":"WalletConnect version 2 requires a projectId. Please visit https://cloud.walletconnect.com to get one."}),dappUrl:o.string().optional().custom((t,s)=>t||s.message({message:"It is strongly recommended to supply a dappUrl as it is required by some wallets (i.e. MetaMask) to allow connection.",type:"any.custom"}),"Custom dappUrl validation"),requiredChains:o.array().items(o.number()).optional(),optionalChains:o.array().items(o.number()).optional(),qrModalOptions:o.object().optional(),additionalRequiredMethods:o.array().items(o.string()).optional(),additionalOptionalMethods:o.array().items(o.string()).optional()}),Q=(t,s)=>{const d=t.validate(s);return d.error?d:null},z=t=>Q(H,t),x=["eth_sendTransaction","eth_signTransaction","personal_sign","eth_sign","eth_signTypedData","eth_signTypedData_v4","wallet_addEthereumChain","wallet_switchEthereumChain"];function J(t){if(!t.projectId)throw new Error("WalletConnect requires a projectId. Please visit https://cloud.walletconnect.com to get one.");t.dappUrl||console.warn("It is strongly recommended to supply a dappUrl to the WalletConnect init object as it is required by some wallets (i.e. MetaMask) to allow connection.");const{projectId:s,handleUri:d,requiredChains:p,optionalChains:w,qrModalOptions:O,additionalRequiredMethods:y,additionalOptionalMethods:I,dappUrl:T}=t;let g;return()=>({label:"WalletConnect",getIcon:async()=>(await m(()=>import("./icon-rnSw6lP7.js"),__vite__mapDeps([]))).default,getInterface:async({chains:b,EventEmitter:S,appMetadata:r})=>{const{ProviderRpcError:f,ProviderRpcErrorCode:C}=await m(()=>import("./index-sdQqwtgd.js"),__vite__mapDeps([0,1,2,3])),{default:D,REQUIRED_METHODS:q}=await m(()=>import("./index.es-7kJ0yoIR.js"),__vite__mapDeps([4,2,3,5])),{Subject:R,fromEvent:u}=await m(()=>import("./index-OU3M1QNo.js"),__vite__mapDeps([6,7,2,3])),{takeUntil:_,take:U}=await m(()=>import("./index-Q5jM-lYg.js"),__vite__mapDeps([8,7,2,3])),M=()=>{if(!r)return;const n=T||r.explore||"";!n&&!n.length&&console.warn("It is strongly recommended to supply a dappUrl as it is required by some wallets (i.e. MetaMask) to allow connection.");const i={name:r.name,description:r.description||"",url:n,icons:[]};return r.icon!==void 0&&r.icon.length&&(i.icons=[r.icon]),r.logo!==void 0&&r.logo.length&&(i.icons=i.icons.length?[...i.icons,r.logo]:[r.logo]),i},$=Array.isArray(p)&&p.length&&p.every(n=>!isNaN(n))?p.map(n=>parseInt(n)):[],j=Array.isArray(w)&&w.length&&w.every(n=>!isNaN(n))?w.map(n=>parseInt(n)):b.map(({id:n})=>parseInt(n,16)),L=new Set(y&&Array.isArray(y)?[...y,...q]:q),k=Array.from(L),V=I&&Array.isArray(I)?[...I,...x]:x,W=await D.init({projectId:s,chains:$,methods:k,optionalChains:j,optionalMethods:V,showQrModal:!0,rpcMap:b.map(({id:n,rpcUrl:i})=>({id:n,rpcUrl:i})).reduce((n,{id:i,rpcUrl:v})=>(n[parseInt(i,16)]=v||"",n),{}),metadata:M(),qrModalOptions:O}),h=new S;class N{constructor({connector:i,chains:v}){this.emit=h.emit.bind(h),this.on=h.on.bind(h),this.removeListener=h.removeListener.bind(h),this.connector=i,this.chains=v,this.disconnected$=new R,u(this.connector,"accountsChanged",e=>e).pipe(_(this.disconnected$)).subscribe({next:e=>{const c=Array.isArray(e)?e:[e];this.emit("accountsChanged",c)},error:console.warn}),u(this.connector,"chainChanged",e=>e).pipe(_(this.disconnected$)).subscribe({next:e=>{const c=A(e)?e:`0x${e.toString(16)}`;this.emit("chainChanged",c)},error:console.warn}),u(this.connector,"session_delete",e=>e).pipe(_(this.disconnected$)).subscribe({next:()=>{this.emit("accountsChanged",[]),this.disconnected$.next(!0),typeof localStorage<"u"&&localStorage.removeItem("walletconnect")},error:console.warn}),this.disconnect=()=>{this.connector.session&&(this.connector.disconnect(),g=null)},t&&d&&u(this.connector,"display_uri",e=>e).pipe(_(this.disconnected$)).subscribe(async e=>{try{d&&await d(e)}catch(c){throw`An error occurred when handling the URI. Error: ${c}`}}),(()=>{const e=this.connector.session;g=e,e&&(this.emit("accountsChanged",this.connector.accounts),this.emit("chainChanged",this.connector.chainId))})(),this.request=async({method:e,params:c})=>{if(e==="eth_chainId")return A(this.connector.chainId)?this.connector.chainId:`0x${this.connector.chainId.toString(16)}`;if(e==="eth_requestAccounts")return new Promise(async(l,P)=>{if(u(this.connector,"connect",a=>a).pipe(U(1)).subscribe({next:({chainId:a})=>{this.emit("accountsChanged",this.connector.accounts);const E=A(a)?a:`0x${a.toString(16)}`;this.emit("chainChanged",E),l(this.connector.accounts)},error:P}),!this.connector.session)await this.connector.connect().catch(a=>{console.error("err creating new session: ",a),P(new f({code:4001,message:"User rejected the request."}))});else{const a=this.connector.accounts,E=this.connector.chainId;g=this.connector.session;const F=`0x${E.toString(16)}`;return this.emit("chainChanged",F),l(a)}});if(e==="eth_selectAccounts")throw new f({code:C.UNSUPPORTED_METHOD,message:`The Provider does not support the requested method: ${e}`});if(e=="wallet_switchEthereumChain"){if(!c)throw new f({code:C.INVALID_PARAMS,message:"The Provider requires a chainId to be passed in as an argument"});const l=c[0];if(!l.hasOwnProperty("chainId")||typeof l.chainId>"u")throw new f({code:C.INVALID_PARAMS,message:"The Provider requires a chainId to be passed in as an argument"});return this.connector.request({method:"wallet_switchEthereumChain",params:[{chainId:l.chainId}]})}return this.connector.request({method:e,params:c})}}}return{provider:new N({chains:b,connector:W}),instance:g}}})}const A=t=>!(typeof t!="string"||!t.match(/^0x[0-9A-Fa-f]*$/));function G(t){if(!t)throw new Error("WalletConnect requires an initialization object to be passed - see the official docs for an example: https://onboard.blocknative.com/docs/wallets/walletconnect");if(t){const s=z(t);if(s)throw s}return J(t)}export{G as default,A as isHexString};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/index-sdQqwtgd.js","assets/eip-1193-r8ryOfM_.js","assets/index-s6c4EPi7.js","assets/index-mGxsnoPc.css","assets/index.es-7kJ0yoIR.js","assets/events-aiOwJqkz.js","assets/index-OU3M1QNo.js","assets/zipWith-PoTj6u66.js","assets/index-Q5jM-lYg.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
